name: meshinfra
on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:

  misspell:
    name: Correct commonly misspelled English words
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GOPROXY: direct
      GOSUMDB: off
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ secrets.GO_VERSION }}
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: |
        go get -u github.com/client9/misspell/cmd/misspell
        /home/runner/go/bin/misspell transform pkg

  lint:
    name: Check & Review code
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GOPROXY: direct
      GOSUMDB: off
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ secrets.GO_VERSION }}
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: |
        go get -u github.com/mgechev/revive
        /home/runner/go/bin/revive -config config/revive-lint.toml -formatter friendly ./...
  
  error_check:
    name: Error check
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GOPROXY: direct
      GOSUMDB: off
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ secrets.GO_VERSION }}
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: | 
        go get -u github.com/kisielk/errcheck
        /home/runner/go/bin/errcheck ./...
  
  static_check:
    name: Static check
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GOPROXY: direct
      GOSUMDB: off
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ secrets.GO_VERSION }}
      # https://staticcheck.io/docs/checks
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: |
        go get -u honnef.co/go/tools/cmd/staticcheck
        /home/runner/go/bin/staticcheck -checks all,-ST1000 ./... 

  vet:
    name: Vet
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GOPROXY: direct
      GOSUMDB: off
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ secrets.GO_VERSION }}
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: go vet ./...
  
  sec_check:
    name: Security check
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: ./...
  
  codecov:
    name: Codecov
    runs-on: ubuntu-latest
    env:
       GO111MODULE: on
       GOLANG: ${{ secrets.GO_VERSION }}
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ secrets.GO_VERSION }}
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Generate coverage report
      run: |
        go test -v -covermode=count -coverprofile=coverage.out ./...
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        env_vars: GOLANG
        fail_ci_if_error: true

  test:
    needs: [lint, error_check, static_check, vet, sec_check]
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ secrets.GO_VERSION }}
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    # - name: Create cluster using KinD
    #   uses: engineerd/setup-kind@v0.3.0
    #   with:
    #     version: "v0.7.0"
    - run: |
        # export CURRENTCONTEXT="$(kubectl config current-context)"
        # echo "current-context:" ${CURRENTCONTEXT}   
        # export KUBECONFIG="${HOME}/.kube/config"
        # echo "environment-kubeconfig:" ${KUBECONFIG}
        GOPROXY=direct GOSUMDB=off GO111MODULE=on go test ./...

  